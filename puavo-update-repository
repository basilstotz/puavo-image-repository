#!/bin/sh

#default values
REPOSITORY="https://images.amxa.ch"
PUAVO_OS="/puavo-os"


help(){
    echo "Usage: puavo-img-repo  IMAGE_DIR [MIRROR_DIR]"
    echo
    echo "       Maintains an image repository of all images from IMAGE_DIR"
    echo "       in MIRROR_DIR (def: IMAGE_DIR/mirror)"
    echo 
    echo "Options:"
    echo "    -r, --repository  HOSTNAME   set repository's hostname (def: $REPOSITORY)"
    echo "    -p, --puavo-os DIR           set puavo-os to DIR (def: $PUAVO_OS)"
    echo "    -n, --no-config              does not generate config"
    echo "    -h, --help                   show this message"
    echo

}


NO_FILES=false
while [ $# -gt 0 ]; do
    case $1 in
        -h|--help)
            shift
            help
            exit 0
            ;;
        -r|--repository)
            shift
            REPOSITORY=$1
            shift
            ;;
        -p|--puavo-os)
            shift
            PUAVO_OS=$1
	    shift
            ;;
        -n|--no-files)
            shift
            NO_FILES=true
            ;;
        --)
            shift
            break
            ;;
        -*)
            usage_error "invalid argument '$1'"
            ;;
        *)
            break
            ;;
    esac
done

if ! test -d $PUAVO_OS;then
    echo "error: puavo-os installation not found"
    exit 1
fi


IMAGE_DIR="$1"
if ! test -d $IMAGE_DIR;then
    echo "error: IMAGEDIR \"$IMAGE_DIR\" not found"
    exit 1
fi
IMAGE_DIR=$(realpath $IMAGE_DIR)

if test -z "$2";then
    mkdir -p $IMAGE_DIR/mirror
    MIRROR_DIR="$IMAGE_DIR/mirror"
else
    MIRROR_DIR=$(realpath $2)
fi


lister(){

    DIST="$1"
    
echo "{" 
FIRST_S="0"
for S in $(echo ${SERIES});do
  
  if test -z "$DIST" || echo $S|grep -q "$DIST"; then
    if test $FIRST_S = 0 ;then
	FIRST_S=1
    else
	echo "," 
    fi    
    echo "  \"${S}-amd64\": [" 
    FIRST_I="0"
    SEARCH="${S}-20*-amd64\.img"
    for I in $(find $IMAGE_DIR  -maxdepth 1 -name "$SEARCH");do
        if test $FIRST_I = 0 ;then
  	    FIRST_I=1
        else
	    echo "," 
        fi
	echo -n "    \"$(basename ${I})\""
    done
    echo
    echo -n " ]" 
  fi
done
echo
echo "}"

}


list_images(){
#if test -e $IMAGE_DIR/images.json;then
#    cat $IMAGE_DIR/images.json
#    return 0
#fi

    NEW=false
    test -d $PUAVO_OS/config/images && NEW=true
    
    
SERIES=""
DISTRIBS=""
for I in $(find $IMAGE_DIR -maxdepth 1 -name '*-os-*-20*-amd64\.img'); do
    OSNAME=$(basename ${I}|cut -d- -f1)
    CLASS=$(basename {$I}|cut -d- -f3)
    DIST=$(basename ${I}|cut -d- -f4)
    
    D="$DIST"
    if ! echo "$DISTRIBS"|grep -q ${D};then
	DISTRIBS="${DISTRIBS} ${D}"
    fi
    S="$OSNAME-os-$CLASS-$DIST"
    if ! echo "$SERIES"|grep -q ${S};then
	SERIES="${SERIES} ${S}"
    fi
done

#echo $DISTRIBS -- $SERIES

if $NEW; then
    rm -r $PUAVO_OS/config/images
    mkdir -p $PUAVO_OS/config/images/
    for D in $DISTRIBS; do
       echo $D
       lister $D > $PUAVO_OS/config/images/$D.json
    done
else
    mkdir -p $PUAVO_OS
    lister "" > $PUAVO_OS/images.json
fi

}

if ! $NO_FILES; then list_images; fi

# here rdiff starts
cat <<EOF > $PUAVO_OS/defaults.mk
   image_dir               := $IMAGE_DIR
   images_urlbase          := $REPOSITORY
   mirror_dir              := $MIRROR_DIR
EOF

ort=$(pwd)
cd $PUAVO_OS

sudo make rdiffs

cd $ort

# fix permissions
#sudo chown --recursive --reference ${IMAGE_DIR}  ${IMAGE_DIR}/.puavo-os
sudo chown --recursive --reference ${IMAGE_DIR}  ${MIRROR_DIR}

exit





################## garbage &&&&&&&&&&&&&&&&&&&&&&&&&&
if $NEW; then
    mkdir -p $IMAGE_DIR/.puavo-os/config/images/
    for D in $DISTRIBS; do
       echo $D
       lister $D > $IMAGE_DIR/.puavo-os/config/images/$D.json
    done
else
    mkdir -p $IMAGE_DIR/.puavo-os
    lister "" > $IMAGE_DIR/.puavo-os/images.json
fi


# call make
mkdir -p $MIRROR_DIR/.checksums
mkdir -p $MIRROR_DIR/.signatures
mkdir -p $MIRROR_DIR/meta
mkdir -p $MIRROR_DIR/rdiffs

cd ${IMAGE_DIR}/.puavo-os
#needs absolute paths!!!!!!!!!!!!
sudo $PUAVO_OS/.aux/make-rdiffs \
        image_dir="${IMAGE_DIR}" \
	images_urlbase="${REPOSITORY}" \
	mirror_dir="${MIRROR_DIR}" \
	mode="production" 



